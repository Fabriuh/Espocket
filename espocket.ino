/////////// LIBRERIAS ////////////////
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Wire.h>
#include <RTClib.h>
#include <EEPROM.h>
/////////////////////////////////////
////////// CONSTANTES /////////////
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET    -1
#define SDA_PIN 8
#define SCL_PIN 9
#define DOWNBUTTON 10
#define MIDBUTTON 20
#define UPBUTTON 21
#define BUZZER_PIN 3
#define MAX_FISH 3
#define MAX_FOOD 5
#define MAX_BUBBLES 10
///////////////////////////////////
///////// DEFINICION DE PANTALLA/////////////
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
///////// DEFINICIOIN DE RTC ///////////////
RTC_DS3231 rtc;
//////////// VARIABLES PARA EL MENU///////////////
// --- Config del carrusel ---
const int posX[3] = {40, 64, 88};   // posiciones base: izquierda, centro, derecha
const int centerY = 32;
const int spacing = (88 - 64);      // distancia entre posiciones (24 px)
const int rSide = 5;
const int rCenter = 8;

const char* itemNames[5] = {"pecera", "pong", "GIF", "reloj", "alarma"};
const int numItems = sizeof(itemNames) / sizeof(itemNames[0]);
// Estado del carrusel
int selectedIndex = 0;              // ítem actualmente en el centro (0..2)
float slideOffset = 0;              // desplazamiento X en píxeles ([-spacing, spacing])
int slideDir = 0;                   // -1 = hacia prev (contenido se mueve a la derecha), +1 = hacia next (contenido a la izquierda)
bool isSliding = false;

// Animación “flotar” del centro
float floatOff = 0;
bool floatUp = true;
volatile bool mediopresionado = false;
volatile int menu = 1;
/////////////////// VARIABLES GIF/////////////
#define FRAME_WIDTH (64)
#define FRAME_HEIGHT (64)
#define FRAME_COUNT (sizeof(frames) / sizeof(frames[0]))
int FRAME_DELAY = 22 ;
int frame = 0;
const byte PROGMEM frames[][512] = {
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,224,0,0,0,0,0,0,127,248,0,0,0,0,0,0,252,62,0,0,0,0,0,1,224,15,0,0,0,0,0,3,128,7,128,0,0,0,0,7,15,195,128,0,0,0,0,6,31,241,192,0,0,0,0,14,60,248,224,0,0,0,0,12,112,60,224,0,0,0,0,12,112,28,96,0,0,0,0,12,99,140,96,0,0,0,0,28,227,140,96,0,0,0,0,28,227,140,96,0,0,0,0,28,97,28,96,0,0,0,0,12,112,28,96,0,0,0,0,12,56,56,224,0,0,0,0,14,63,248,192,0,0,0,0,6,31,225,192,0,0,0,0,7,3,129,128,0,0,0,0,3,128,3,128,0,0,0,0,1,128,3,0,0,0,0,0,1,192,7,0,0,0,0,0,1,192,7,0,0,0,0,0,1,192,7,0,0,0,0,0,1,128,3,0,0,0,0,0,1,128,3,128,0,0,0,0,3,128,3,128,0,0,0,0,7,7,129,192,0,0,0,0,63,7,192,248,0,0,0,7,252,15,224,127,224,0,0,127,248,15,192,31,254,0,0,255,0,7,192,0,127,0,3,224,0,3,128,0,7,128,3,128,0,0,0,0,1,192,7,3,0,0,0,0,224,224,14,31,192,0,0,7,248,112,12,63,240,0,0,15,252,48,28,112,120,0,0,30,14,56,28,224,56,7,224,28,7,56,24,226,24,31,248,24,71,24,24,199,28,63,252,56,227,24,24,199,156,120,30,57,227,24,24,195,28,112,6,56,199,24,28,224,24,224,7,28,7,24,28,112,56,192,3,28,14,56,28,124,113,192,3,143,62,56,14,31,225,128,1,135,252,112,6,15,195,128,1,195,240,96,7,0,7,0,0,224,1,224,3,192,14,0,0,112,3,192,1,248,124,0,0,126,31,128,0,127,248,0,0,31,254,0,0,31,224,0,0,7,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,240,0,0,0,0,0,0,127,248,0,0,0,0,0,0,252,62,0,0,0,0,0,1,224,15,0,0,0,0,0,3,128,3,128,0,0,0,0,7,15,225,128,0,0,0,0,7,31,241,192,0,0,0,0,14,62,248,224,0,0,0,0,12,120,60,224,0,0,0,0,12,112,28,96,0,0,0,0,12,99,140,96,0,0,0,0,12,227,140,112,0,0,0,0,28,99,140,96,0,0,0,0,12,97,12,96,0,0,0,0,12,112,28,96,0,0,0,0,14,56,56,224,0,0,0,0,6,63,248,192,0,0,0,0,7,15,225,192,0,0,0,0,3,3,129,128,0,0,0,0,3,128,3,128,0,0,0,0,1,128,3,0,0,0,0,0,1,192,3,0,0,0,0,0,1,192,7,0,0,0,0,0,1,192,7,0,0,0,0,0,1,128,3,0,0,0,0,0,3,128,3,0,0,0,0,0,3,128,3,128,0,0,0,0,7,7,129,192,0,0,0,0,62,7,192,240,0,0,0,15,252,15,224,127,192,0,0,127,240,15,192,63,252,0,0,254,0,7,192,1,255,0,3,192,0,3,128,0,7,128,7,128,0,0,0,0,3,192,7,7,128,0,0,0,192,224,14,31,192,0,0,7,248,96,12,63,240,0,0,15,252,112,28,112,120,0,0,30,30,56,24,224,56,7,224,28,7,56,24,226,24,31,248,24,7,56,24,199,24,63,252,56,231,24,24,199,28,112,30,57,227,24,24,195,24,96,14,56,199,24,24,224,56,224,7,24,7,24,28,112,56,192,3,28,14,56,28,124,241,192,3,15,30,48,14,31,225,128,3,143,252,112,6,15,131,128,1,195,240,96,7,128,7,0,0,224,0,224,3,192,30,0,0,240,3,192,1,248,124,0,0,124,15,128,0,127,248,0,0,31,254,0,0,31,224,0,0,15,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,240,0,0,0,0,0,0,63,252,0,0,0,0,0,0,252,126,0,0,0,0,0,1,224,7,128,0,0,0,0,1,192,3,128,0,0,0,0,3,135,225,192,0,0,0,0,7,31,240,224,0,0,0,0,6,62,120,96,0,0,0,0,6,56,28,96,0,0,0,0,14,112,14,112,0,0,0,0,12,113,142,112,0,0,0,0,12,115,206,112,0,0,0,0,12,115,142,48,0,0,0,0,14,112,14,112,0,0,0,0,14,112,28,112,0,0,0,0,14,60,60,96,0,0,0,0,7,31,248,224,0,0,0,0,7,15,240,192,0,0,0,0,3,131,193,192,0,0,0,0,1,128,3,128,0,0,0,0,1,192,3,128,0,0,0,0,1,192,3,0,0,0,0,0,1,192,3,0,0,0,0,0,1,192,3,0,0,0,0,0,1,128,3,0,0,0,0,0,3,128,3,0,0,0,0,0,3,128,3,128,0,0,0,0,15,7,129,192,0,0,0,0,254,7,192,240,0,0,0,63,252,15,224,254,0,0,0,255,224,15,192,63,248,0,1,240,0,7,192,7,254,0,3,192,0,3,128,0,31,0,7,0,0,0,0,0,3,192,14,15,128,0,0,0,1,192,28,63,224,0,0,3,240,224,28,120,240,0,0,15,248,96,24,224,56,0,0,31,60,112,24,192,56,7,192,28,14,48,24,199,24,31,240,56,7,56,57,199,24,127,248,56,199,56,56,199,24,112,28,49,231,56,24,194,56,224,14,57,231,24,24,224,56,192,6,56,135,56,24,112,113,192,7,56,14,48,28,63,225,128,7,30,30,48,14,31,195,128,3,15,252,112,7,6,7,0,3,135,248,96,7,128,15,0,1,193,224,224,3,224,62,0,0,224,3,192,0,255,248,0,0,120,7,128,0,127,240,0,0,127,255,0,0,7,128,0,0,31,252,0,0,0,0,0,0,3,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,0,0,31,252,0,0,0,0,0,0,127,191,0,0,0,0,0,0,248,7,128,0,0,0,0,0,224,3,192,0,0,0,0,1,195,224,192,0,0,0,0,3,143,248,224,0,0,0,0,7,31,252,112,0,0,0,0,3,28,30,48,0,0,0,0,7,56,14,48,0,0,0,0,6,56,198,48,0,0,0,0,6,49,199,56,0,0,0,0,6,49,199,56,0,0,0,0,6,56,198,48,0,0,0,0,6,56,14,56,0,0,0,0,7,28,30,48,0,0,0,0,3,31,252,112,0,0,0,0,3,135,248,96,0,0,0,0,1,129,224,224,0,0,0,0,1,192,1,192,0,0,0,0,1,192,1,128,0,0,0,0,0,192,3,128,0,0,0,0,0,192,3,0,0,0,0,0,0,192,3,0,0,0,0,0,1,192,3,0,0,0,0,0,3,128,3,128,0,0,0,0,7,128,3,128,0,0,0,0,31,7,129,128,0,0,0,63,254,7,193,224,0,0,0,255,248,15,192,248,0,0,1,248,0,15,192,127,128,0,3,192,0,7,192,31,248,0,7,0,0,3,128,1,254,0,14,15,128,0,0,0,31,0,28,63,192,0,0,0,7,128,24,123,224,0,0,0,129,192,24,224,112,0,0,7,240,192,24,192,56,0,0,31,248,224,57,198,56,15,192,28,60,96,57,207,24,63,240,56,12,112,57,207,56,124,248,48,14,112,57,198,56,224,56,113,206,48,56,224,49,192,28,115,198,48,24,224,113,192,14,113,206,48,28,127,227,128,14,48,14,48,12,63,195,0,6,56,28,112,14,15,7,0,7,30,60,96,7,0,14,0,7,15,248,224,3,192,60,0,3,135,225,192,1,255,248,0,1,192,3,192,0,255,240,0,1,224,7,128,0,15,128,0,0,248,31,0,0,0,0,0,0,63,252,0,0,0,0,0,0,31,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,7,254,0,0,0,0,0,0,31,255,0,0,0,0,0,0,60,7,192,0,0,0,0,0,112,1,224,0,0,0,0,0,224,96,240,0,0,0,0,1,195,252,112,0,0,0,0,1,199,254,56,0,0,0,0,1,143,15,56,0,0,0,0,3,142,7,24,0,0,0,0,3,156,3,152,0,0,0,0,3,28,227,152,0,0,0,0,3,28,227,156,0,0,0,0,3,28,99,156,0,0,0,0,3,156,3,24,0,0,0,0,1,142,7,24,0,0,0,0,1,143,158,56,0,0,0,0,1,199,252,48,0,0,0,0,0,193,248,112,0,0,0,0,0,224,0,224,0,0,0,0,0,224,1,192,0,0,0,0,0,224,1,192,0,0,0,0,0,224,3,128,0,0,0,0,0,224,3,128,0,0,0,0,1,192,3,128,0,0,0,0,3,128,3,128,0,0,0,0,7,128,3,128,0,0,0,63,255,7,129,128,0,0,0,255,252,7,193,192,0,0,3,224,0,15,192,224,0,0,7,128,0,15,192,248,0,0,14,0,0,7,192,63,128,0,30,31,0,3,128,31,240,0,28,127,192,0,0,3,252,0,24,241,224,0,0,0,62,0,57,224,112,0,0,0,7,0,49,192,112,0,0,0,3,128,49,142,48,0,0,15,225,128,49,142,48,63,128,63,241,192,49,142,48,127,224,56,120,192,49,196,48,225,240,112,56,224,57,192,113,192,56,96,28,224,56,224,227,128,56,227,156,96,28,127,195,0,28,231,140,96,28,63,135,0,28,227,156,96,14,0,14,0,12,96,28,224,7,0,28,0,12,112,56,224,3,224,120,0,14,60,120,192,1,255,240,0,6,31,241,192,0,127,192,0,7,15,195,128,0,0,0,0,3,128,7,128,0,0,0,0,1,192,15,0,0,0,0,0,0,248,62,0,0,0,0,0,0,127,248,0,0,0,0,0,0,31,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,0,0,0,7,255,128,0,0,0,0,0,15,199,192,0,0,0,0,0,30,0,224,0,0,0,0,0,60,0,112,0,0,0,0,0,48,124,56,0,0,0,0,0,97,255,28,0,0,0,0,0,99,207,140,0,0,0,0,0,231,131,140,0,0,0,0,0,199,1,206,0,0,0,0,0,198,49,198,0,0,0,0,0,198,56,198,0,0,0,0,0,198,56,198,0,0,0,0,0,198,1,198,0,0,0,0,0,199,1,142,0,0,0,0,0,227,135,140,0,0,0,0,0,97,255,28,0,0,0,0,0,96,254,24,0,0,0,0,0,112,0,56,0,0,0,0,0,112,0,112,0,0,0,0,0,96,0,224,0,0,0,0,0,96,1,192,0,0,0,0,0,224,1,192,0,0,0,0,1,192,1,128,0,0,0,63,7,192,3,128,0,0,0,255,255,128,3,128,0,0,3,255,254,7,131,128,0,0,7,128,0,7,193,128,0,0,14,0,0,15,193,192,0,0,28,30,0,15,192,224,0,0,24,127,128,7,192,240,0,0,56,255,192,3,128,124,0,0,49,192,224,0,0,31,128,0,49,128,96,0,0,7,240,0,115,140,112,0,0,0,248,0,115,158,112,0,0,0,60,0,115,158,112,16,0,0,14,0,115,140,112,255,0,31,135,0,49,128,97,255,192,127,195,0,49,192,227,193,192,249,227,128,56,255,199,0,224,224,115,128,24,127,142,0,113,192,49,128,28,28,14,0,49,198,57,128,14,0,60,0,49,207,57,128,7,192,120,0,49,206,57,128,3,255,240,0,57,192,49,128,0,255,192,0,56,224,113,128,0,30,0,0,24,240,227,128,0,0,0,0,28,127,195,0,0,0,0,0,12,63,135,0,0,0,0,0,14,0,14,0,0,0,0,0,7,128,28,0,0,0,0,0,3,224,248,0,0,0,0,0,1,255,240,0,0,0,0,0,0,127,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,128,0,0,0,0,0,1,255,224,0,0,0,0,0,3,224,248,0,0,0,0,0,7,128,60,0,0,0,0,0,14,0,28,0,0,0,0,0,12,63,14,0,0,0,0,0,28,127,199,0,0,0,0,0,56,241,227,0,0,0,0,0,49,192,227,0,0,0,0,0,49,192,115,128,0,0,0,0,49,142,115,128,0,0,0,0,49,142,49,128,0,0,0,0,49,142,113,128,0,0,0,0,49,192,115,128,0,0,0,0,49,192,227,0,0,0,0,0,56,241,227,0,0,0,0,0,56,127,199,0,0,0,0,0,56,63,14,0,0,0,0,0,56,0,30,0,0,0,0,0,48,0,60,0,0,0,0,0,112,0,120,0,0,0,126,0,224,0,240,0,0,1,255,255,224,0,224,0,0,7,227,255,128,1,192,0,0,15,0,30,0,1,128,0,0,30,0,0,7,129,128,0,0,24,62,0,7,193,128,0,0,56,255,128,15,193,128,0,0,49,231,192,15,193,192,0,0,113,128,192,7,193,192,0,0,99,128,224,3,128,224,0,0,99,28,96,0,0,120,0,0,99,28,96,0,0,60,0,0,99,28,96,0,0,31,0,0,99,128,224,0,0,7,192,0,115,128,193,248,0,1,240,0,113,193,195,254,0,0,112,0,48,255,143,143,0,24,56,0,24,63,14,3,128,254,28,0,28,0,28,1,193,255,140,0,15,0,120,0,195,195,142,0,7,193,240,0,195,1,198,0,3,255,224,0,199,24,198,0,0,255,128,0,199,56,230,0,0,0,0,0,230,60,198,0,0,0,0,0,231,24,198,0,0,0,0,0,231,1,198,0,0,0,0,0,99,131,198,0,0,0,0,0,97,255,140,0,0,0,0,0,112,255,28,0,0,0,0,0,56,124,56,0,0,0,0,0,28,0,120,0,0,0,0,0,15,0,240,0,0,0,0,0,7,255,192,0,0,0,0,0,3,255,128,0,0,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,192,0,0,0,0,0,0,31,248,0,0,0,0,0,0,127,124,0,0,0,0,0,0,240,15,0,0,0,0,0,1,192,7,128,0,0,0,0,3,135,195,128,0,0,0,0,7,31,241,192,0,0,0,0,6,30,248,192,0,0,0,0,6,56,60,224,0,0,0,0,14,112,28,96,0,0,0,0,14,113,140,96,0,0,0,0,14,99,140,96,0,0,0,0,14,115,140,96,0,0,0,0,14,112,12,96,0,0,0,0,14,56,28,224,0,0,0,0,14,60,120,192,0,0,0,0,12,31,240,192,0,0,126,0,28,15,225,192,0,1,255,192,60,0,3,128,0,7,247,240,120,0,15,0,0,15,0,255,240,0,30,0,0,28,0,31,192,0,124,0,0,56,60,0,0,0,240,0,0,48,255,0,0,1,224,0,0,113,231,128,7,129,192,0,0,99,129,192,7,193,128,0,0,99,0,192,15,193,128,0,0,99,24,224,7,193,128,0,0,103,60,224,7,193,128,0,0,103,28,224,3,1,128,0,0,99,0,192,0,1,192,0,0,99,129,192,0,0,224,0,0,113,195,128,0,0,240,0,0,48,255,135,224,0,120,0,0,56,126,31,248,0,60,0,0,28,0,62,124,0,15,0,0,14,0,120,30,0,7,128,0,7,195,224,6,0,1,192,0,3,255,192,7,3,224,224,0,0,255,0,3,7,248,96,0,0,0,0,3,15,188,112,0,0,0,0,3,28,14,112,0,0,0,0,3,24,6,48,0,0,0,0,3,56,199,48,0,0,0,0,7,57,231,48,0,0,0,0,7,56,231,48,0,0,0,0,3,56,6,48,0,0,0,0,3,28,14,48,0,0,0,0,3,30,28,112,0,0,0,0,3,143,252,96,0,0,0,0,1,195,240,224,0,0,0,0,0,224,1,192,0,0,0,0,0,240,7,128,0,0,0,0,0,126,31,0,0,0,0,0,0,31,254,0,0,0,0,0,0,7,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,0,0,0,7,254,0,0,0,0,0,0,15,255,128,0,0,0,0,0,28,3,192,0,0,0,0,0,120,0,224,0,0,0,0,0,112,248,112,0,0,0,0,0,227,252,48,0,0,0,0,0,199,254,24,0,0,0,0,0,199,7,24,0,0,0,0,1,142,3,152,0,0,0,0,1,140,99,156,0,0,56,0,1,140,113,140,0,1,255,128,1,140,115,156,0,3,255,224,3,142,3,152,0,15,0,240,3,14,3,24,0,30,0,60,7,7,143,24,0,28,28,31,62,3,254,56,0,56,255,7,252,1,252,112,0,49,255,129,240,0,0,224,0,113,193,192,0,0,1,224,0,99,128,192,0,0,7,192,0,99,24,224,0,0,63,128,0,99,28,224,7,128,124,0,0,99,28,224,7,192,240,0,0,99,0,224,15,193,192,0,0,115,129,192,7,193,128,0,0,113,195,192,7,195,128,0,0,48,255,128,3,3,128,0,0,56,126,0,0,3,0,0,0,28,0,31,0,3,128,0,0,14,0,127,192,3,128,0,0,7,129,251,224,1,128,0,0,3,255,192,112,1,192,0,0,0,255,0,56,0,224,0,0,0,0,0,24,0,112,0,0,0,0,0,24,0,56,0,0,0,0,0,24,0,24,0,0,0,0,0,24,12,12,0,0,0,0,0,24,63,142,0,0,0,0,0,24,255,199,0,0,0,0,0,56,225,227,0,0,0,0,0,49,192,227,0,0,0,0,0,49,132,115,0,0,0,0,0,49,142,115,128,0,0,0,0,49,142,115,0,0,0,0,0,49,140,115,0,0,0,0,0,49,192,99,0,0,0,0,0,56,224,227,0,0,0,0,0,24,255,199,0,0,0,0,0,28,127,134,0,0,0,0,0,14,14,12,0,0,0,0,0,7,0,60,0,0,0,0,0,7,192,248,0,0,0,0,0,1,255,224,0,0,0,0,0,0,127,192,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,192,0,0,0,0,0,1,255,240,0,0,0,0,0,7,192,120,0,0,127,128,0,15,0,28,0,1,255,224,0,14,30,14,0,3,192,248,0,28,127,134,0,7,0,28,0,24,255,199,0,14,0,14,0,57,224,227,0,28,63,135,0,49,192,99,0,24,127,199,128,113,140,115,0,56,224,227,192,225,142,115,0,57,192,97,255,225,142,115,128,49,128,112,127,129,128,115,128,49,142,112,62,1,192,227,0,49,142,112,0,0,225,231,0,49,140,112,0,0,127,199,0,57,192,96,0,0,63,142,0,56,224,224,0,0,0,30,0,24,127,192,7,128,0,60,0,28,63,128,7,192,0,248,0,14,14,0,15,192,63,224,0,7,0,0,15,192,255,128,0,3,192,56,7,193,240,0,0,1,255,254,3,3,128,0,0,0,255,255,0,3,0,0,0,0,4,3,128,7,0,0,0,0,0,1,192,6,0,0,0,0,0,0,192,6,0,0,0,0,0,0,192,6,0,0,0,0,0,0,224,6,0,0,0,0,0,0,224,7,0,0,0,0,0,0,224,7,0,0,0,0,0,0,192,3,128,0,0,0,0,1,192,3,128,0,0,0,0,1,195,193,192,0,0,0,0,3,143,240,192,0,0,0,0,3,31,248,224,0,0,0,0,7,60,28,96,0,0,0,0,6,56,12,96,0,0,0,0,6,49,142,96,0,0,0,0,6,49,206,96,0,0,0,0,6,49,206,112,0,0,0,0,6,48,142,112,0,0,0,0,6,56,28,96,0,0,0,0,7,28,60,224,0,0,0,0,3,15,248,224,0,0,0,0,3,135,241,192,0,0,0,0,1,192,3,192,0,0,0,0,0,224,7,128,0,0,0,0,0,124,31,0,0,0,0,0,0,63,252,0,0,0,0,0,0,15,240,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,248,0,0,0,0,0,0,63,252,0,0,0,0,0,0,248,15,0,0,0,0,0,0,224,7,128,0,0,0,0,1,192,129,192,0,0,0,0,3,135,241,192,0,0,0,0,3,31,248,224,0,7,192,0,7,60,28,224,0,63,248,0,6,56,12,112,0,254,124,0,6,49,140,112,1,224,14,0,6,115,206,56,3,192,7,128,6,51,206,56,3,135,193,128,6,48,140,28,7,31,241,192,6,56,28,15,190,60,120,192,7,28,60,7,252,56,56,224,3,15,248,1,240,112,28,224,3,135,224,0,0,99,140,96,1,193,0,0,0,99,140,96,0,224,0,0,0,99,140,96,0,120,0,0,0,112,28,224,0,127,224,7,128,56,56,192,0,15,248,7,192,60,120,192,0,0,124,15,192,31,241,192,0,0,14,15,192,7,195,128,0,0,6,7,192,0,7,0,0,0,7,3,0,0,15,0,0,0,3,0,3,254,124,0,0,0,3,0,7,255,248,0,0,0,3,0,15,15,192,0,0,0,3,0,28,0,0,0,0,0,7,0,56,0,0,0,0,0,7,0,56,0,0,0,0,0,14,0,48,0,0,0,0,0,28,0,48,0,0,0,0,0,120,0,48,0,0,0,0,0,112,0,48,0,0,0,0,0,225,248,48,0,0,0,0,1,199,254,56,0,0,0,0,1,199,14,24,0,0,0,0,1,142,7,24,0,0,0,0,1,140,67,24,0,0,0,0,1,156,115,152,0,0,0,0,3,156,243,152,0,0,0,0,1,140,99,24,0,0,0,0,1,142,7,24,0,0,0,0,1,206,7,56,0,0,0,0,1,199,254,56,0,0,0,0,0,227,252,112,0,0,0,0,0,96,240,96,0,0,0,0,0,120,0,224,0,0,0,0,0,28,3,192,0,0,0,0,0,15,255,0,0,0,0,0,0,7,254,0,0,0,0,0,0,0,192,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,192,0,0,0,0,0,0,255,224,0,0,0,0,0,3,192,248,0,0,0,0,0,7,128,28,0,0,0,0,0,14,0,14,0,0,0,0,0,12,63,134,0,0,0,0,0,28,127,199,0,0,0,0,0,24,224,227,0,0,0,0,0,57,192,115,128,0,0,0,0,57,196,115,128,0,0,0,0,49,142,49,128,0,0,0,0,57,142,49,128,0,0,0,0,49,196,113,128,0,0,0,0,57,192,113,128,0,0,0,0,24,224,225,128,0,0,0,0,28,127,193,128,0,0,0,0,28,63,129,192,0,0,0,0,14,14,1,192,0,192,0,0,7,0,0,224,15,248,0,0,3,192,0,240,63,254,0,0,1,240,0,127,240,15,0,0,0,120,0,31,224,3,128,0,0,28,0,7,3,193,192,0,0,14,0,0,15,240,192,0,0,14,0,0,31,248,224,0,0,6,7,128,28,28,96,0,0,6,7,192,56,14,96,0,0,6,15,192,48,206,96,0,0,6,15,192,49,206,112,0,0,6,7,192,49,206,112,0,0,14,1,0,48,14,112,0,0,28,0,0,56,28,96,0,0,120,0,0,28,60,96,0,1,240,0,0,15,248,224,0,7,192,0,63,7,241,192,0,30,0,0,255,192,3,128,0,60,0,1,225,224,7,128,0,120,120,3,128,124,31,0,0,113,254,3,0,31,252,0,0,227,255,7,0,15,240,0,0,231,131,134,0,0,0,0,0,199,1,134,0,0,0,0,0,198,49,198,0,0,0,0,0,198,121,206,0,0,0,0,0,198,57,206,0,0,0,0,0,198,17,204,0,0,0,0,0,199,3,140,0,0,0,0,0,227,135,156,0,0,0,0,0,115,255,28,0,0,0,0,0,112,254,56,0,0,0,0,0,56,0,112,0,0,0,0,0,28,0,224,0,0,0,0,0,15,131,224,0,0,0,0,0,7,255,128,0,0,0,0,0,1,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,128,0,0,0,0,0,0,127,224,0,0,0,0,0,1,240,248,0,0,0,0,0,3,128,60,0,0,0,0,0,7,0,14,0,0,0,0,0,14,31,7,0,0,0,0,0,28,127,199,0,0,0,0,0,28,241,227,0,0,0,0,0,24,224,115,128,0,0,0,0,57,192,113,128,0,0,0,0,57,206,49,128,0,0,0,0,57,142,49,128,0,0,0,0,57,206,49,128,0,0,0,0,57,192,113,128,0,0,0,0,24,224,115,128,0,0,0,0,28,113,227,0,0,0,0,0,12,63,199,0,0,0,0,0,14,31,7,0,0,0,0,0,7,0,6,0,0,0,0,0,3,0,14,0,0,0,0,0,3,128,12,0,0,0,0,0,1,128,12,0,0,0,0,0,1,128,12,0,0,0,0,0,1,128,12,0,0,0,0,0,1,128,14,0,0,0,0,0,3,128,14,0,0,0,0,0,3,0,7,0,0,0,0,0,7,0,3,192,0,0,0,14,14,7,129,255,192,0,0,127,252,7,192,255,240,0,1,255,240,15,192,0,120,0,7,128,0,15,192,0,28,0,7,0,0,7,192,0,14,0,14,30,0,1,0,31,199,0,28,127,128,0,0,127,227,0,24,255,192,0,0,240,243,128,56,224,224,0,0,224,113,128,57,192,96,0,0,192,49,128,49,140,112,31,129,198,57,128,49,142,112,127,225,207,57,128,49,142,112,240,240,198,57,128,49,128,113,224,56,224,49,128,57,192,225,192,28,240,115,128,24,225,227,128,28,127,227,128,28,127,199,0,14,63,199,0,28,63,142,0,7,15,14,0,14,0,28,0,7,128,30,0,7,0,60,0,3,224,60,0,3,224,248,0,0,255,240,0,1,255,224,0,0,63,192,0,0,63,128,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,224,0,0,0,0,0,0,63,248,0,0,0,0,0,0,248,62,0,0,0,0,0,1,224,15,0,0,0,0,0,3,128,3,128,0,0,0,0,3,15,225,128,0,0,0,0,7,31,241,192,0,0,0,0,6,56,56,192,0,0,0,0,6,48,28,224,0,0,0,0,14,112,28,96,0,0,0,0,12,99,140,96,0,0,0,0,12,99,140,96,0,0,0,0,14,115,140,96,0,0,0,0,14,112,28,224,0,0,0,0,14,56,56,192,0,0,0,0,6,31,248,192,0,0,252,0,6,15,225,128,0,3,255,128,12,3,131,128,0,15,207,192,28,0,7,0,0,30,1,224,60,0,14,0,0,60,0,120,248,0,60,0,0,48,124,63,240,0,120,0,0,97,254,15,192,0,240,0,0,99,207,0,0,1,224,0,0,231,3,128,0,1,192,0,0,199,1,128,0,1,128,0,0,198,49,192,7,131,128,0,0,198,121,192,7,195,128,0,0,198,57,192,15,195,128,0,0,198,1,192,7,195,128,0,0,231,3,128,7,129,128,0,0,99,199,128,0,1,192,0,0,97,254,0,0,0,240,0,0,112,252,7,128,0,120,0,0,56,0,63,224,0,62,0,0,30,0,255,240,0,15,0,0,15,135,224,56,0,3,128,0,7,255,128,28,7,225,192,0,0,252,0,12,31,240,192,0,0,0,0,14,60,120,192,0,0,0,0,14,56,28,224,0,0,0,0,14,112,12,96,0,0,0,0,14,115,140,96,0,0,0,0,14,115,140,96,0,0,0,0,14,113,140,96,0,0,0,0,6,48,28,96,0,0,0,0,6,56,28,224,0,0,0,0,7,31,248,192,0,0,0,0,3,15,241,192,0,0,0,0,3,135,195,128,0,0,0,0,1,192,7,128,0,0,0,0,0,240,15,0,0,0,0,0,0,127,254,0,0,0,0,0,0,31,248,0,0,0,0,0,0,3,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,240,0,0,0,0,0,0,255,248,0,0,15,224,0,1,224,62,0,0,63,248,0,3,192,14,0,0,248,62,0,3,7,7,0,1,224,15,0,7,31,227,128,3,192,3,128,14,63,241,128,3,135,225,128,12,112,113,192,7,31,241,192,12,96,56,192,6,60,56,192,12,227,24,192,14,48,28,224,28,231,24,224,12,113,28,224,28,231,24,112,28,99,140,96,12,226,24,63,248,99,140,96,12,112,56,31,240,115,140,96,12,120,112,3,128,112,28,224,14,63,240,0,0,56,56,192,7,31,192,0,0,30,248,192,3,2,0,0,0,15,225,192,3,192,0,0,0,3,195,128,1,240,0,1,0,0,7,0,0,127,192,7,128,0,31,0,0,31,248,7,192,5,252,0,0,1,252,15,192,127,248,0,0,0,30,7,193,255,128,0,0,0,7,7,195,224,0,0,0,0,3,129,3,128,0,0,0,0,1,128,7,0,0,0,0,0,1,128,6,0,0,0,0,0,1,128,6,0,0,0,0,0,1,128,6,0,0,0,0,0,1,128,14,0,0,0,0,0,3,128,6,0,0,0,0,0,3,0,7,0,0,0,0,0,7,15,131,0,0,0,0,0,6,63,227,128,0,0,0,0,12,125,241,128,0,0,0,0,12,112,113,192,0,0,0,0,12,224,57,192,0,0,0,0,28,231,24,192,0,0,0,0,28,199,24,192,0,0,0,0,28,231,24,192,0,0,0,0,28,224,56,192,0,0,0,0,12,112,57,128,0,0,0,0,12,120,241,128,0,0,0,0,14,63,227,128,0,0,0,0,7,15,195,0,0,0,0,0,3,128,7,0,0,0,0,0,3,192,30,0,0,0,0,0,0,248,252,0,0,0,0,0,0,127,240,0,0,0,0,0,0,15,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,240,0,0,0,0,0,0,127,252,0,0,0,0,0,0,240,30,0,0,0,0,0,1,192,7,0,0,0,0,0,3,131,131,128,0,0,0,0,3,15,225,192,0,0,0,0,7,31,240,192,0,0,0,0,6,56,56,192,0,0,0,0,14,112,28,224,0,0,0,0,14,113,156,96,0,0,0,0,14,99,140,96,0,0,0,0,14,99,140,96,0,0,0,0,14,113,28,96,0,0,0,0,14,112,28,224,0,0,0,0,6,56,56,192,0,0,0,0,7,31,240,192,0,0,0,0,3,15,224,192,0,0,0,0,3,131,128,192,0,0,0,0,1,192,0,224,1,252,0,0,0,224,0,112,7,255,0,0,0,120,0,112,15,143,128,0,0,60,0,60,60,1,192,0,0,12,0,31,248,0,224,0,0,14,0,7,224,248,112,0,0,7,0,0,3,254,56,0,0,3,0,0,7,143,24,0,0,3,0,0,7,3,28,0,0,3,7,128,14,3,140,0,0,3,7,192,12,113,140,0,0,3,15,192,12,113,140,0,0,7,7,192,14,113,140,0,0,14,7,192,14,3,140,0,0,60,0,0,7,7,28,0,0,120,0,0,3,143,24,0,1,240,0,0,1,254,56,0,3,192,0,31,192,248,112,0,7,0,0,63,240,0,240,0,14,31,0,120,124,1,224,0,12,63,192,224,31,143,192,0,28,121,224,192,7,255,0,0,24,224,113,192,1,252,0,0,24,192,113,128,0,0,0,0,57,198,49,128,0,0,0,0,57,206,49,128,0,0,0,0,57,206,49,128,0,0,0,0,57,192,113,128,0,0,0,0,24,224,113,128,0,0,0,0,28,241,227,0,0,0,0,0,12,127,195,0,0,0,0,0,14,31,134,0,0,0,0,0,7,0,14,0,0,0,0,0,3,128,60,0,0,0,0,0,1,240,248,0,0,0,0,0,0,255,240,0,0,0,0,0,0,63,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,248,0,0,0,0,0,0,15,254,0,0,0,0,0,0,31,63,128,0,0,0,0,0,56,3,192,0,0,0,0,0,112,0,224,0,0,0,0,0,225,240,96,0,0,0,0,0,199,252,112,0,0,0,0,1,207,158,48,0,0,0,0,1,142,7,56,0,0,0,0,1,156,7,24,0,0,0,0,3,156,227,24,0,0,0,0,3,152,227,24,0,0,0,0,3,156,227,24,0,0,0,0,1,156,7,24,0,0,0,0,1,142,7,56,0,0,0,0,1,143,30,48,0,0,0,0,1,199,252,112,0,0,0,0,0,193,248,96,0,0,0,0,0,224,0,224,0,0,0,0,0,224,1,192,0,0,0,0,0,96,3,128,0,0,0,0,0,96,3,0,0,0,0,0,0,96,7,0,0,0,0,0,0,96,7,0,0,0,0,0,0,224,7,0,0,0,0,0,0,224,3,0,0,0,0,0,1,192,3,0,0,0,0,0,3,128,3,128,0,0,0,15,255,0,1,192,0,0,0,63,254,7,128,240,0,0,0,120,0,7,192,127,248,0,0,224,0,15,192,31,254,0,1,192,0,7,192,0,15,0,3,135,240,7,192,0,7,128,3,31,248,0,0,1,193,192,7,28,60,0,0,7,240,192,6,56,28,0,0,31,248,224,6,48,14,0,0,28,28,96,6,49,206,0,0,56,12,96,6,113,206,15,224,49,142,112,6,49,142,63,248,49,198,112,6,56,12,120,60,49,206,112,7,60,28,112,28,48,142,96,3,31,248,224,14,56,12,96,3,143,241,192,7,28,28,96,1,195,193,192,3,15,248,224,0,224,3,128,3,135,241,192,0,248,15,0,1,192,129,192,0,63,254,0,0,224,7,128,0,15,248,0,0,120,15,0,0,0,128,0,0,63,252,0,0,0,0,0,0,15,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,7,254,0,0,0,0,0,0,31,31,128,0,0,0,0,0,60,1,192,0,0,0,0,0,112,0,224,0,0,0,0,0,225,248,112,0,0,0,0,0,227,254,48,0,0,0,0,1,199,142,56,0,0,0,0,1,142,7,24,0,0,0,0,1,140,3,24,0,0,0,0,1,140,99,152,0,0,0,0,1,156,243,156,0,0,0,0,1,140,99,152,0,0,0,0,3,140,3,24,0,0,0,0,3,142,7,24,0,0,0,0,3,135,158,56,0,0,0,0,3,3,252,48,0,0,2,0,7,1,248,112,0,0,63,224,7,0,0,224,0,0,255,248,14,0,3,192,0,1,224,62,60,0,15,128,0,3,128,15,248,0,62,0,0,7,7,3,224,0,120,0,0,14,31,192,0,0,240,0,0,14,127,224,0,0,224,0,0,12,112,112,0,0,192,0,0,28,224,56,7,129,192,0,0,28,194,56,7,193,192,0,0,24,199,24,15,193,192,0,0,24,199,24,7,192,192,0,0,24,194,56,7,192,192,0,0,28,224,56,1,0,224,0,0,12,112,112,0,0,112,0,0,14,63,224,0,0,62,0,0,6,31,193,224,0,31,128,0,7,2,7,248,0,7,192,0,3,128,15,254,0,0,224,0,1,224,60,15,0,0,112,0,0,127,248,7,0,252,56,0,0,63,224,3,131,254,24,0,0,0,0,3,135,135,28,0,0,0,0,1,134,3,156,0,0,0,0,1,142,33,140,0,0,0,0,1,142,113,140,0,0,0,0,1,140,113,140,0,0,0,0,1,206,49,140,0,0,0,0,0,198,3,156,0,0,0,0,0,199,7,28,0,0,0,0,0,227,255,24,0,0,0,0,0,97,252,56,0,0,0,0,0,112,112,112,0,0,0,0,0,56,0,224,0,0,0,0,0,30,1,192,0,0,0,0,0,15,255,128,0,0,0,0,0,3,255,0,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,224,0,0,0,0,0,0,63,248,0,0,0,0,0,0,124,126,0,0,0,0,0,1,224,15,0,0,0,0,0,3,192,3,0,0,0,0,0,3,143,195,128,0,1,0,0,7,31,241,192,0,31,240,0,6,60,120,192,0,127,252,0,14,48,28,192,0,240,30,0,12,112,28,224,1,192,7,0,28,99,140,96,3,131,131,128,24,99,140,96,7,15,225,192,56,99,140,224,7,63,240,224,112,112,28,224,14,56,56,127,224,56,56,192,14,112,28,63,192,62,248,192,14,99,28,0,0,31,241,192,12,99,140,0,0,7,195,128,12,99,140,0,0,0,7,128,14,112,28,0,0,0,15,0,14,112,24,0,0,0,252,0,6,56,120,7,128,31,248,0,7,31,240,7,192,127,192,0,3,15,224,7,192,240,0,0,3,129,0,7,192,224,0,0,1,224,0,7,193,192,0,0,0,248,30,1,1,128,0,0,0,63,255,192,1,128,0,0,0,31,255,192,1,128,0,0,0,0,0,224,1,128,0,0,0,0,0,112,1,128,0,0,0,0,0,48,1,192,0,0,0,0,0,48,0,224,0,0,0,0,0,56,0,112,0,0,0,0,0,56,0,120,0,0,0,0,0,48,0,28,0,0,0,0,0,48,126,28,0,0,0,0,0,48,255,142,0,0,0,0,0,113,193,198,0,0,0,0,0,115,128,198,0,0,0,0,0,99,0,231,0,0,0,0,0,99,28,103,0,0,0,0,0,99,28,99,0,0,0,0,0,99,24,231,0,0,0,0,0,115,128,231,0,0,0,0,0,49,193,198,0,0,0,0,0,49,255,142,0,0,0,0,0,56,127,12,0,0,0,0,0,28,60,28,0,0,0,0,0,14,0,56,0,0,0,0,0,15,0,240,0,0,0,0,0,3,255,224,0,0,0,0,0,0,255,128,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,248,0,0,0,0,0,0,15,254,0,0,0,0,0,0,31,15,128,0,0,0,0,0,56,3,192,0,0,248,0,0,112,0,224,0,3,254,0,0,225,248,112,0,15,255,128,0,199,252,112,0,28,3,192,1,207,30,56,0,120,0,224,1,142,7,56,0,112,248,112,1,156,3,28,0,227,254,56,1,156,227,28,1,199,254,24,3,156,227,14,7,135,7,24,3,156,99,7,255,14,3,156,1,140,7,3,254,12,115,156,1,142,7,0,240,12,113,156,1,199,158,0,0,12,113,156,0,195,252,0,0,14,3,156,0,225,240,0,0,14,7,28,0,112,0,0,0,7,143,24,0,60,0,7,128,3,254,56,0,31,128,7,192,1,252,112,0,7,252,7,192,0,0,240,0,1,254,7,192,0,1,224,0,0,7,7,192,127,7,192,0,0,3,129,1,255,255,0,0,0,1,192,3,193,252,0,0,0,1,192,3,128,0,0,0,0,0,192,7,0,0,0,0,0,0,192,6,0,0,0,0,0,1,192,6,0,0,0,0,0,1,192,14,0,0,0,0,0,1,128,6,0,0,0,0,0,3,128,6,0,0,0,0,0,3,0,7,0,0,0,0,0,7,3,7,0,0,0,0,0,6,31,195,128,0,0,0,0,14,63,241,128,0,0,0,0,12,112,113,192,0,0,0,0,28,96,57,192,0,0,0,0,28,227,24,192,0,0,0,0,28,199,24,192,0,0,0,0,28,199,24,192,0,0,0,0,28,226,24,192,0,0,0,0,12,96,57,192,0,0,0,0,12,112,113,192,0,0,0,0,14,63,227,128,0,0,0,0,7,15,195,128,0,0,0,0,3,0,7,0,0,0,0,0,3,192,14,0,0,0,0,0,1,240,60,0,0,0,0,0,0,127,248,0,0,0,0,0,0,31,192,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,0,255,192,0,0,0,0,0,3,243,224,0,0,0,0,0,7,0,120,0,0,0,0,0,14,0,28,0,0,0,0,0,28,63,12,0,0,0,0,0,56,255,142,0,0,0,0,0,49,227,198,0,0,0,0,0,49,192,199,0,0,0,0,0,115,128,227,0,0,0,0,0,115,156,99,0,0,0,0,0,115,28,99,0,0,254,0,0,115,156,99,0,3,255,128,0,115,128,227,128,15,135,192,0,49,192,225,192,31,0,240,0,57,227,193,224,120,0,56,0,56,255,128,253,240,126,24,0,28,62,0,63,193,255,28,0,14,0,0,31,3,199,140,0,7,0,0,0,3,129,142,0,3,224,0,0,7,1,206,0,1,248,0,0,6,56,206,0,0,60,3,128,6,56,198,0,0,14,7,192,6,56,198,0,0,7,7,192,7,1,206,0,0,3,7,192,3,131,140,0,0,3,135,192,3,239,140,0,0,3,129,0,1,255,28,0,0,3,128,0,0,124,56,0,0,3,128,3,252,0,112,0,0,3,128,7,254,0,224,0,0,7,0,14,15,231,192,0,0,14,0,28,3,255,128,0,0,30,0,56,0,124,0,0,0,28,0,56,0,0,0,0,0,56,0,48,0,0,0,0,0,112,0,48,0,0,0,0,0,225,248,48,0,0,0,0,0,195,254,56,0,0,0,0,1,199,7,56,0,0,0,0,1,206,7,24,0,0,0,0,1,140,3,152,0,0,0,0,1,140,115,152,0,0,0,0,1,140,115,152,0,0,0,0,1,140,99,156,0,0,0,0,1,142,3,24,0,0,0,0,1,198,7,24,0,0,0,0,0,199,254,56,0,0,0,0,0,225,252,48,0,0,0,0,0,112,112,112,0,0,0,0,0,120,0,224,0,0,0,0,0,30,3,192,0,0,0,0,0,15,255,0,0,0,0,0,0,7,254,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,192,0,0,0,0,0,0,63,248,0,0,0,0,0,0,252,252,0,0,0,0,0,1,224,30,0,0,0,0,0,3,192,7,0,0,0,0,0,3,15,195,128,0,0,0,0,7,31,241,192,0,0,0,0,6,60,112,192,0,0,0,0,14,112,56,192,0,0,0,0,12,112,28,224,0,0,0,0,12,99,28,224,0,0,0,0,12,99,156,224,0,0,0,0,12,99,156,224,0,0,0,0,12,96,28,224,0,0,0,0,14,112,56,224,0,0,0,0,6,60,120,224,0,0,0,0,6,31,240,96,0,0,0,0,7,15,192,112,0,255,0,0,3,128,0,56,7,255,192,0,1,224,0,62,31,195,224,0,0,240,0,31,254,0,240,0,0,124,0,7,240,0,56,0,0,30,0,0,0,254,28,0,0,14,0,0,1,255,12,0,0,7,7,128,3,195,140,0,0,3,7,192,3,129,206,0,0,3,15,192,7,0,198,0,0,3,15,192,7,56,198,0,0,3,7,192,7,56,198,0,0,3,1,0,7,24,198,0,0,7,0,0,7,1,198,0,0,14,0,0,3,131,206,0,0,28,0,3,129,255,140,0,0,120,0,15,225,255,28,0,0,240,0,63,248,124,56,0,1,224,0,120,60,0,120,0,3,128,0,240,15,0,240,0,7,3,0,224,7,239,192,0,6,31,192,192,3,255,128,0,14,63,224,192,0,126,0,0,12,112,112,192,0,0,0,0,28,224,57,192,0,0,0,0,28,226,24,192,0,0,0,0,24,199,24,192,0,0,0,0,28,199,24,192,0,0,0,0,28,227,24,192,0,0,0,0,28,96,56,192,0,0,0,0,12,112,113,192,0,0,0,0,12,63,241,128,0,0,0,0,6,31,195,128,0,0,0,0,7,6,7,0,0,0,0,0,3,128,14,0,0,0,0,0,1,224,60,0,0,0,0,0,0,255,248,0,0,0,0,0,0,63,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,248,0,0,0,0,0,0,15,254,0,0,0,0,0,0,62,15,128,0,0,0,0,0,120,3,192,0,0,0,0,0,224,0,224,0,0,0,0,1,195,248,96,0,0,0,0,1,199,252,112,0,0,0,0,1,143,30,48,0,0,0,0,1,156,7,56,0,0,0,0,3,28,7,24,0,0,0,0,3,24,227,24,0,0,0,0,3,24,227,24,0,0,0,0,3,152,227,24,0,0,0,0,3,156,7,24,0,0,0,0,3,142,7,24,0,0,0,0,1,143,158,56,0,0,0,0,1,199,252,56,0,0,0,0,0,193,240,56,0,0,0,0,0,224,0,56,0,0,0,0,0,120,0,24,0,0,0,0,0,60,0,28,0,0,0,0,0,14,0,14,1,254,0,0,0,7,0,7,255,255,128,0,0,7,0,3,255,131,224,0,0,3,0,0,248,0,240,0,0,3,7,128,0,0,56,0,0,3,7,192,0,254,24,0,0,3,7,192,1,255,28,0,0,3,15,192,3,199,140,0,0,7,7,192,7,1,206,0,0,14,3,128,7,1,206,0,0,60,0,0,6,56,198,0,0,248,0,0,6,56,198,0,3,224,0,0,6,56,198,0,7,192,0,0,7,1,206,0,15,0,0,63,131,131,140,0,28,0,0,255,195,239,140,0,56,126,1,224,225,255,28,0,48,255,3,192,112,124,56,0,113,199,131,128,56,0,112,0,99,129,195,0,30,0,240,0,99,0,199,0,15,135,224,0,231,24,231,0,3,255,128,0,231,60,231,0,0,254,0,0,231,56,231,0,0,0,0,0,99,0,198,0,0,0,0,0,99,129,198,0,0,0,0,0,97,195,134,0,0,0,0,0,48,255,140,0,0,0,0,0,56,126,28,0,0,0,0,0,28,0,56,0,0,0,0,0,30,0,120,0,0,0,0,0,7,195,240,0,0,0,0,0,3,255,192,0,0,0,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,0,0,0,3,255,128,0,0,0,0,0,15,199,192,0,0,0,0,0,30,0,240,0,0,0,0,0,60,0,120,0,0,0,0,0,56,124,56,0,0,0,0,0,113,255,28,0,0,0,0,0,99,199,140,0,0,0,0,0,231,131,142,0,0,0,0,0,199,1,198,0,0,0,0,0,198,56,198,0,0,0,0,0,198,56,198,0,0,0,0,0,198,56,198,0,0,0,0,0,199,1,198,0,0,0,0,0,231,1,206,0,0,0,0,0,227,199,140,0,0,0,0,0,97,255,12,0,0,0,0,0,112,254,12,0,0,0,0,0,56,0,28,0,0,0,0,0,28,0,28,0,0,0,0,0,14,0,28,0,0,0,0,0,7,0,12,0,0,0,0,0,7,0,14,0,0,0,0,0,3,0,7,0,0,0,0,0,3,128,3,227,252,0,0,0,3,128,1,255,255,128,0,0,3,7,128,255,231,192,0,0,3,7,192,0,1,224,0,0,7,15,192,0,0,112,0,0,14,15,192,0,248,56,0,0,30,7,192,1,254,24,0,0,252,3,128,3,207,28,0,3,240,0,0,7,3,140,0,31,192,0,0,6,1,140,0,62,0,0,0,14,49,204,0,120,0,0,0,14,121,206,0,240,0,0,60,14,113,206,0,225,252,1,255,14,1,142,0,199,254,3,255,135,3,140,1,199,15,7,129,199,135,156,1,142,3,14,0,227,255,24,3,140,3,142,0,97,254,56,3,156,115,140,0,112,32,120,3,156,243,140,0,60,0,240,1,156,99,156,0,30,3,224,1,140,3,28,0,15,255,192,1,142,7,24,0,3,254,0,1,199,158,24,0,0,32,0,0,195,252,48,0,0,0,0,0,225,248,112,0,0,0,0,0,112,0,224,0,0,0,0,0,60,1,224,0,0,0,0,0,31,31,128,0,0,0,0,0,15,255,0,0,0,0,0,0,1,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,127,192,0,0,0,0,0,3,255,240,0,0,0,0,0,7,128,120,0,0,0,0,0,15,0,28,0,0,0,0,0,30,12,14,0,0,0,0,0,28,127,142,0,0,0,0,0,56,255,199,0,0,0,0,0,49,225,227,0,0,0,0,0,113,192,227,0,0,0,0,0,115,128,115,128,0,0,0,0,115,140,115,128,0,0,0,0,115,158,115,128,0,0,0,0,115,140,115,128,0,0,0,0,113,128,99,128,0,0,0,0,49,192,227,0,0,0,0,0,56,243,199,0,0,0,0,0,56,127,135,0,0,0,0,0,28,63,14,0,0,0,0,0,14,0,14,0,0,0,0,0,7,0,14,0,0,0,0,0,7,0,14,0,0,0,0,0,3,128,14,0,0,0,0,0,3,128,6,0,0,0,0,0,3,128,7,0,0,0,0,0,3,128,3,128,0,0,0,0,3,128,3,224,0,0,0,0,3,135,128,255,252,0,0,0,7,7,192,127,255,0,0,0,15,15,192,0,7,192,0,0,62,15,192,0,1,224,0,1,252,7,192,0,0,112,0,15,224,3,128,1,252,56,0,63,0,0,0,3,254,56,0,120,0,0,0,7,143,24,0,224,0,0,0,14,7,156,1,192,192,0,0,14,3,140,3,135,240,0,0,12,113,140,3,143,252,1,252,12,113,140,7,28,28,7,254,12,113,140,7,24,14,15,7,142,3,140,6,56,134,28,3,142,7,28,6,49,199,24,1,199,143,24,6,49,198,56,0,195,254,56,6,56,198,56,0,225,252,48,7,56,14,48,0,112,0,112,3,28,14,112,0,56,1,224,3,15,60,112,0,30,7,192,3,135,248,224,0,15,255,128,1,195,224,224,0,3,252,0,0,224,1,192,0,0,0,0,0,112,7,128,0,0,0,0,0,63,159,0,0,0,0,0,0,31,252,0,0,0,0,0,0,7,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,128,0,0,0,0,0,0,255,224,0,0,0,0,0,1,251,248,0,0,0,0,0,3,192,60,0,0,0,0,0,7,0,14,0,0,0,0,0,14,15,135,0,0,0,0,0,12,63,195,128,0,0,0,0,28,127,225,128,0,0,0,0,24,224,113,128,0,0,0,0,24,192,49,192,0,0,0,0,57,198,57,192,0,0,0,0,57,199,56,192,0,0,0,0,57,207,56,192,0,0,0,0,57,198,57,192,0,0,0,0,56,224,57,192,0,0,0,0,24,224,113,128,0,0,0,0,28,127,225,128,0,0,0,0,12,63,195,128,0,0,0,0,14,15,7,0,0,0,0,0,7,0,7,0,0,0,0,0,3,0,6,0,0,0,0,0,3,128,6,0,0,0,0,0,1,128,6,0,0,0,0,0,1,128,7,0,0,0,0,0,1,128,7,0,0,0,0,0,1,128,3,128,0,0,0,0,3,128,3,192,0,0,0,0,3,7,129,240,0,0,0,0,15,7,192,255,252,0,0,0,62,15,192,63,255,0,0,3,252,15,192,0,15,128,0,63,240,7,192,0,3,192,0,127,128,3,128,0,0,224,0,240,0,0,0,1,248,112,1,192,0,0,0,3,252,56,3,129,0,0,0,15,158,56,3,15,224,0,0,14,7,24,7,31,248,0,0,28,3,28,14,60,56,3,240,28,99,156,14,48,28,15,252,28,243,156,12,112,12,31,30,28,243,156,12,99,142,60,7,28,67,156,12,99,206,56,3,142,7,24,12,113,142,112,1,143,15,24,14,112,12,96,1,199,254,56,14,56,28,96,0,195,252,48,6,60,56,224,0,224,224,112,7,31,240,192,0,112,1,224,3,7,225,192,0,60,3,192,3,128,3,128,0,31,255,128,1,224,7,128,0,15,254,0,0,248,62,0,0,1,240,0,0,63,252,0,0,0,0,0,0,31,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,224,0,0,0,0,0,0,127,248,0,0,0,0,0,1,248,124,0,0,0,0,0,3,192,30,0,0,0,0,0,7,128,7,0,0,0,0,0,7,15,195,128,0,0,0,0,14,63,225,128,0,0,0,0,12,124,240,192,0,0,0,0,28,112,56,192,0,0,0,0,28,224,24,192,0,0,0,0,28,227,28,224,0,0,0,0,24,199,28,224,0,0,0,0,24,199,28,224,0,0,0,0,24,224,28,224,0,0,0,0,28,224,56,192,0,0,0,0,28,112,120,192,0,0,0,0,12,63,241,192,0,0,0,0,14,31,225,128,0,0,0,0,7,7,131,128,0,0,0,0,3,0,7,0,0,0,0,0,3,128,7,0,0,0,0,0,1,128,7,0,0,0,0,0,1,128,7,0,0,0,0,0,1,128,7,0,0,0,0,0,1,128,7,0,0,0,0,0,1,128,3,128,0,0,0,0,3,128,3,128,0,0,0,0,7,7,129,224,0,0,0,0,31,7,192,254,0,0,0,0,254,15,224,127,252,0,0,31,248,15,192,15,255,0,0,127,192,7,192,0,7,128,0,248,0,3,128,0,3,192,3,192,0,0,0,0,0,224,3,128,0,0,0,3,248,112,7,15,192,0,0,7,252,112,14,31,240,0,0,15,30,56,12,56,248,0,0,30,7,24,12,112,56,7,224,28,7,24,28,96,28,15,248,24,227,28,28,227,28,63,124,24,243,156,24,231,140,56,14,24,227,152,28,227,140,112,7,28,67,24,28,97,28,96,3,28,7,24,28,112,28,224,3,143,14,24,12,120,56,192,1,135,254,56,14,63,240,192,1,195,248,112,6,15,225,192,0,224,96,224,7,7,3,128,0,112,1,224,3,192,7,0,0,124,7,192,1,224,30,0,0,31,255,0,0,255,252,0,0,15,254,0,0,63,248,0,0,1,224,0,0,3,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
  {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,224,0,0,0,0,0,0,127,248,0,0,0,0,0,0,248,126,0,0,0,0,0,1,224,15,0,0,0,0,0,3,128,7,0,0,0,0,0,7,15,193,128,0,0,0,0,6,31,241,192,0,0,0,0,14,60,248,224,0,0,0,0,12,112,56,224,0,0,0,0,12,96,28,224,0,0,0,0,28,227,28,96,0,0,0,0,28,227,140,96,0,0,0,0,28,227,140,96,0,0,0,0,28,97,28,96,0,0,0,0,28,112,28,96,0,0,0,0,12,120,56,224,0,0,0,0,14,63,240,192,0,0,0,0,6,31,225,192,0,0,0,0,7,3,131,128,0,0,0,0,3,128,3,128,0,0,0,0,3,128,3,0,0,0,0,0,1,128,7,0,0,0,0,0,1,192,7,0,0,0,0,0,1,192,7,0,0,0,0,0,1,128,3,0,0,0,0,0,1,128,3,128,0,0,0,0,3,128,3,128,0,0,0,0,7,7,129,192,0,0,0,0,31,7,192,248,0,0,0,7,252,15,224,127,240,0,0,63,248,15,192,31,254,0,0,255,128,7,192,0,63,0,1,224,0,3,128,0,3,192,3,128,0,0,0,0,1,192,7,1,0,0,0,1,240,224,14,31,192,0,0,7,248,112,14,63,240,0,0,15,254,48,12,120,120,0,0,30,14,56,28,96,56,7,224,28,7,56,24,224,24,31,248,24,67,24,24,231,28,63,124,56,227,24,24,199,156,120,14,56,227,24,24,227,28,112,6,24,195,24,28,224,24,224,7,28,7,24,28,112,56,192,3,30,14,56,28,120,112,192,3,143,190,56,14,63,225,192,1,135,252,112,6,15,195,128,1,193,240,224,7,0,7,0,0,224,1,224,3,192,15,0,0,120,3,192,1,240,62,0,0,62,31,128,0,127,248,0,0,31,254,0,0,63,240,0,0,7,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
};
/////////////////////////////////////////////
//////////////////// VARIABLES ALARMA /////////////////
// Variables para editor de hora
int digitoH1 = 0, digitoH2 = 0, digitoM1 = 0, digitoM2 = 0;
int indiceSeleccionado = 0;

// Variables de alarma
int alarmaHora = -1;
int alarmaMin = -1;
bool alarmaActiva = false;
bool alarmaSonando = false;

// EEPROM
#define EEPROM_ADDR 0

/////////////////////////////////
////////////// VARIABLES PARA PONG //////////////////
const int PADDLE_W = 3;
const int PADDLE_H = 15;
const int BALL_R   = 2;
const int GOAL_SCORE = 15;
const int dificultadpong = 1;

int nikoY;
float cpuY;
int ballX, ballY;
int ballSpeedX, ballSpeedY;
int nikoScore = 0;
int cpuScore  = 0;

enum GameState { PLAYING, VICTORY, DEFEAT };
GameState state = PLAYING;
///////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////// CODIGO PECES //////////////////////////////////////////////////////////////////////////
//////// PESCADO /////////
int fishTargetFood[MAX_FISH]; // objetivo de comida para cada pez
struct Fish {
  int x, y;
  int size;
  int speed;
  bool direction; // true: derecha, false: izquierda
  int eaten;
  int targetFood;   // índice de la comida que persigue
};
//////// COMIDA //////////
struct Food {
  int x, y;
  bool active;
};
//////// BURBUJAS ////////
struct Bubble {
  int x, y;
  int speed;
};

Fish fishes[MAX_FISH];
Food foods[MAX_FOOD];
Bubble bubbles[MAX_BUBBLES];

/////////////// DIBUJAR PESCADOS /////////////////////
void drawFish(Fish &fish) {
  int s = fish.size;
  int x = fish.x;
  int y = fish.y;

  if (fish.direction) {
    display.fillCircle(x, y, s, WHITE);
    display.fillTriangle(x - s, y, x - s - 3, y - 2, x - s - 3, y + 2, WHITE);
    display.drawPixel(x + 1, y - 1, BLACK);
    // Derecha
  } else {
    // Izquierda
    display.fillCircle(x, y, s, WHITE);
    display.fillTriangle(x + s, y, x + s + 3, y - 2, x + s + 3, y + 2, WHITE);
    display.drawPixel(x - 1, y - 1, BLACK);
  }
}
///////////// DIBUJAR COMIDA //////////////////
void drawFood(Food &food) {
  if (food.active) {
    display.fillCircle(food.x, food.y, 3, WHITE);
  }
}

///////////// DIBUJAR BURBUJAS ///////////////
void drawBubble(Bubble &b) {
  display.drawCircle(b.x, b.y, 2, WHITE);
}
///////////// DIBUJAR BORDES ////////////////
void drawDoubleBorder() {
  display.drawRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT, WHITE);
  display.drawRect(2, 2, SCREEN_WIDTH - 4, SCREEN_HEIGHT - 4, WHITE);
}
/////////////// DIBUJAR PLANTAS /////////////
void drawPlants() {
  // Planta 1 - curva
  for (int i = 0; i < 5; i++) {
    display.drawLine(10 + i, 63, 10 + i - (i % 2 == 0 ? 2 : -2), 50 - i * 2, WHITE);
  }

  // Planta 2 - más alta
  for (int i = 0; i < 6; i++) {
    display.drawLine(30 + i, 63, 30 + i + (i % 2 == 0 ? 1 : -1), 47 - i * 2, WHITE);
  }

  // Planta 3 - más ancha
  for (int i = 0; i < 7; i++) {
    display.drawLine(60 + i, 63, 60 + i + (i % 2 == 0 ? 2 : -1), 45 - i * 2, WHITE);
  }

  // Planta 4 - más recta
  for (int i = 0; i < 4; i++) {
    display.drawLine(100 + i, 63, 100 + i, 48 - i * 3, WHITE);
  }
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////// INTERRUPCION POR HARDWARE DE MENUS ///////////////////
void IRAM_ATTR mediopresionadoo() {
  static unsigned long lastInterruptTime = 0;
  unsigned long interruptTime = millis();
  if(interruptTime - lastInterruptTime>200){
  mediopresionado = true;
  lastInterruptTime = interruptTime;
  }
}
//////// MENU PRINCIPAL ////////////////////////
void menuprincipal (){
  if (floatUp) floatOff += 0.20;
  else         floatOff -= 0.20;
  if (floatOff > 3)  floatUp = false;
  if (floatOff < -3) floatUp = true;

  // --------- animación de desplazamiento ---------
  if (isSliding) {
    const float speed = 3.2; // px/frame
    // Convención: slideDir = +1 (NEXT) => contenido se mueve a la izquierda
    slideOffset += (slideDir > 0 ? -speed : +speed);

    if (slideOffset <= -spacing) {
      // terminó un paso hacia NEXT
      selectedIndex = idxRight(selectedIndex);
      slideOffset += spacing; // normaliza a 0
      isSliding = false;
    } else if (slideOffset >= spacing) {
      // terminó un paso hacia PREV
      selectedIndex = idxLeft(selectedIndex);
      slideOffset -= spacing; // normaliza a 0
      isSliding = false;
    }
  }

  // --------- dibujar ---------
  display.clearDisplay();

  // Índices visibles relativo al seleccionado SIEMPRE en el centro
  int iL = idxLeft(selectedIndex);
  int iC = selectedIndex;
  int iR = idxRight(selectedIndex);

// Izquierda
  drawCircleAt(posX[0] + slideOffset, centerY, rSide, false);
// Centro
  drawCircleAt(posX[1] + slideOffset, centerY + floatOff, rCenter, true);
// Derecha
  drawCircleAt(posX[2] + slideOffset, centerY, rSide, false); 

  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor((SCREEN_WIDTH - strlen(itemNames[iC]) * 6) / 2, 54); // centrado
  display.print(itemNames[iC]);

  display.display();
  delay(30);


}
void drawCircleAt(int x, int y, int r, bool isCenter) {
  display.fillCircle(x, y, r, SSD1306_WHITE);
  if (isCenter) display.drawCircle(x, y, r + 2, SSD1306_WHITE);
}

// --- Controles públicos (llamarlos desde tu boton) ---
void nextItem() {
  if (isSliding) return;
  slideDir = +1;       // mover contenido a la izquierda
  isSliding = true;
}

void prevItem() {
  if (isSliding) return;
  slideDir = -1;       // mover contenido a la derecha
  isSliding = true;
}
const char* getSelectedItem() { // llamar a esta funcion para saber el item seleccionado
  return itemNames[selectedIndex];
}
//
inline int idxLeft(int i)  { return (i + numItems - 1) % numItems; }
inline int idxRight(int i) { return (i + 1) % numItems; }
///////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////PONG////////////////////////////////////////////////
void resetBall() {
  ballX = SCREEN_WIDTH / 2;
  ballY = SCREEN_HEIGHT / 2;
  ballSpeedX = (random(0, 2) == 0) ? -2 : 2;
  ballSpeedY = (random(0, 2) == 0) ? -1 : 1;
}

void resetMatch() {
  nikoScore = 0;
  cpuScore  = 0;
  nikoY = (SCREEN_HEIGHT - PADDLE_H) / 2;
  cpuY  = (SCREEN_HEIGHT - PADDLE_H) / 2;
  resetBall();
  state = PLAYING;
}

void drawHUD() {
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  // Marcador arriba
  display.setCursor(2, 0);
  display.print("Niko: ");
  display.print(nikoScore);
  display.setCursor(80, 0);
  display.print("CPU: ");
  display.print(cpuScore);
}

void drawCenterNet() {
  for (int y = 5; y < SCREEN_HEIGHT; y += 6) {
    display.drawFastVLine(SCREEN_WIDTH/2, y, 3, SSD1306_WHITE);
  }
}

void pong(){
 // Pantallas de final (con marcador visible y reinicio con UP)
  if (state == VICTORY || state == DEFEAT) {
    display.clearDisplay();
    drawHUD();

    display.setTextSize(2);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(18, 20);
    if (state == VICTORY) display.println("VICTORIA");
    else                  display.println("DERROTA");

    display.setTextSize(1);
    display.setCursor(18, 40);
    display.println("Derecha para");
    display.setCursor(18, 50);
    display.println("reiniciar");
    display.display();

    if (digitalRead(UPBUTTON) == LOW) {
      // pequeño debounce
      delay(200);
      if (digitalRead(UPBUTTON) == LOW) {
        resetMatch();
      }
    }
    delay(10);
    return;
  }

  // ---- CONTROLES NIKO ----
  if (digitalRead(UPBUTTON) == LOW && nikoY > 0) {
    nikoY -= 2;
  }
  if (digitalRead(DOWNBUTTON) == LOW && nikoY < SCREEN_HEIGHT - PADDLE_H) {
    nikoY += 2;
  }

  // ---- IA CPU (simple) ----
  int cpuCenter = cpuY + PADDLE_H/2 + random(-5, 5);
  if(ballX > SCREEN_WIDTH/2){
  if (cpuCenter < ballY && cpuY < SCREEN_HEIGHT - PADDLE_H) cpuY += dificultadpong;
  if (cpuCenter > ballY && cpuY > 0)                        cpuY -= dificultadpong;
}
  // ---- FÍSICA PELOTA ----
  ballX += ballSpeedX;
  ballY += ballSpeedY;

  // Rebotes verticales (considerando el radio)
  if (ballY <= BALL_R) {
    ballY = BALL_R;
    ballSpeedY = -ballSpeedY;
  }
  if (ballY >= SCREEN_HEIGHT - 1 - BALL_R) {
    ballY = SCREEN_HEIGHT - 1 - BALL_R;
    ballSpeedY = -ballSpeedY;
  }

  // Colisión con paleta Niko (izquierda)
  if (ballX - BALL_R <= (2 + PADDLE_W) &&
      ballY >= nikoY && ballY <= nikoY + PADDLE_H) {
    tone(BUZZER_PIN, 1000, 200);  // 1000 Hz por 200 ms
    ballSpeedX = abs(ballSpeedX);        // hacia la derecha
    ballX = 2 + PADDLE_W + BALL_R;       // salir de la paleta
    // efecto según zona de impacto
    int hit = ballY - (nikoY + PADDLE_H/2);
    if (hit < 0) ballSpeedY = -abs(ballSpeedY);
    else         ballSpeedY =  abs(ballSpeedY);
    noTone(BUZZER_PIN);
  }

  // Colisión con paleta CPU (derecha)
  if (ballX + BALL_R >= (SCREEN_WIDTH - 2 - PADDLE_W) &&
      ballY >= cpuY && ballY <= cpuY + PADDLE_H) {
    tone(BUZZER_PIN, 1000, 200);  // 1000 Hz por 200 ms
    ballSpeedX = -abs(ballSpeedX);       // hacia la izquierda
    ballX = SCREEN_WIDTH - 2 - PADDLE_W - BALL_R;
    int hit = ballY - (cpuY + PADDLE_H/2);
    if (hit < 0) ballSpeedY = -abs(ballSpeedY);
    else         ballSpeedY =  abs(ballSpeedY);
    noTone(BUZZER_PIN);
  }

  // ---- PUNTO ----
  if (ballX < 0) {
    cpuScore++;
    resetBall();
  } else if (ballX > SCREEN_WIDTH) {
    nikoScore++;
    resetBall();
  }

  // ---- VICTORIA / DERROTA ----
  if (nikoScore >= GOAL_SCORE) {
    state = VICTORY;
  } else if (cpuScore >= GOAL_SCORE) {
    state = DEFEAT;
  }

  // ---- DIBUJO ----
  display.clearDisplay();

  drawHUD();
  drawCenterNet();

  // Paleta Niko (izquierda)
  display.fillRect(2, nikoY, PADDLE_W, PADDLE_H, SSD1306_WHITE);
  // Paleta CPU (derecha)
  display.fillRect(SCREEN_WIDTH - 2 - PADDLE_W, cpuY, PADDLE_W, PADDLE_H, SSD1306_WHITE);

  // Pelota
  display.fillCircle(ballX, ballY, BALL_R, SSD1306_WHITE);

  display.display();

  delay(16); // ~60 FPS
}
////////////////////////////////////////////////////////////////////////////
///////////////////////// GIF/////////////////////////////////
void GIF(){
  display.clearDisplay();
  display.drawBitmap(32, 0, frames[frame], FRAME_WIDTH, FRAME_HEIGHT, 1);
  display.display();
  frame = (frame + 1) % FRAME_COUNT;
  delay(FRAME_DELAY);
}
///////////////////////// RELOJ /////////////////////////////////
void reloj(){
  DateTime now = rtc.now();

  // Crear string de la hora en formato HH:MM:SS
  char buffer[9];
  sprintf(buffer, "%02d:%02d:%02d", now.hour(), now.minute(), now.second());

  display.clearDisplay();
  display.setTextSize(2); // Tamaño de texto
  display.setTextColor(SSD1306_WHITE);

  // Calcular el ancho del texto
  int16_t x1, y1;
  uint16_t w, h;
  display.getTextBounds(buffer, 0, 0, &x1, &y1, &w, &h);

  // Calcular posición centrada
  int x = (SCREEN_WIDTH - w) / 2;
  int y = (SCREEN_HEIGHT - h) / 2;

  // Dibujar hora en el centro
  display.setCursor(x, y);
  display.print(buffer);

  display.display();
  delay(250);
}
//////////////////////////////////////////////////////////
////////////////////// Peces tambien////////
void assignFoodTargets() {
  bool foodTaken[MAX_FOOD] = {false};
  for (int i = 0; i < MAX_FISH; i++) {
    for (int f = 0; f < MAX_FOOD; f++) {
      if (!foodTaken[f]) {
        fishTargetFood[i] = f;
        foodTaken[f] = true;
        break;
      }
    }
  }
}
///////////////// ALARMA ////////////////////////////////
void dibujarHora(int resaltado) {
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);

  int x[4] = {20, 40, 80, 100};
  int y = 20;
  int valores[4] = {digitoH1, digitoH2, digitoM1, digitoM2};

  for (int i = 0; i < 4; i++) {
    if (i == resaltado) {
      display.fillRect(x[i]-2, y-2, 16, 20, SSD1306_WHITE);
      display.setTextColor(SSD1306_BLACK, SSD1306_WHITE);
    } else {
      display.setTextColor(SSD1306_WHITE);
    }
    display.setCursor(x[i], y);
    display.print(valores[i]);
  }
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(60, y);
  display.print(":");
}

// === ANIMAR CAMBIO DE DIGITO ===
void animarDigito(int &digito, int nuevo, int x, int y) {
  int offset = 0;
  int paso = 4;
  while (offset < 16) {
    display.clearDisplay();

    // Mostrar dígito actual bajando
    display.setTextSize(2);
    display.setCursor(x, y - offset);
    display.print(digito);

    // Mostrar nuevo dígito subiendo
    display.setCursor(x, y + (16 - offset));
    display.print(nuevo);

    // Dibujar otros dígitos
    dibujarHora(indiceSeleccionado);

    display.display();
    offset += paso;
    delay(30);
  }
  digito = nuevo;
}

// === CAMBIAR DIGITO SEGÚN REGLAS DEL RELOJ ===
void cambiarDigito(int indice) {
  int nuevo;
  switch (indice) {
    case 0: nuevo = (digitoH1 + 1) % 3; break; // H1: 0-2
    case 1: // H2
      nuevo = digitoH2 + 1;
      if (digitoH1 == 2 && nuevo > 3) nuevo = 0;
      else if (digitoH1 < 2 && nuevo > 9) nuevo = 0;
      break;
    case 2: nuevo = (digitoM1 + 1) % 6; break; // M1: 0-5
    case 3: nuevo = (digitoM2 + 1) % 10; break; // M2: 0-9
  }
  int x[4] = {20, 40, 80, 100};
  animarDigito(
    (indice == 0 ? digitoH1 : indice == 1 ? digitoH2 : indice == 2 ? digitoM1 : digitoM2),
    nuevo, x[indice], 20
  );
}
void alarma (){
  DateTime now = rtc.now();
  // Leer botones
  bool sel = (digitalRead(DOWNBUTTON) == LOW);
  bool chg = (digitalRead(UPBUTTON) == LOW);

  // Confirmar alarma si se presionan ambos botones
  if (sel && chg) {
    alarmaHora = digitoH1 * 10 + digitoH2;
    alarmaMin  = digitoM1 * 10 + digitoM2;

    EEPROM.write(EEPROM_ADDR, alarmaHora);
    EEPROM.write(EEPROM_ADDR+1, alarmaMin);
    EEPROM.commit();

    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0,0);
    display.print("Alarma confirmada:");
    display.setCursor(0,20);
    display.setTextSize(2);
    display.printf("%02d:%02d", alarmaHora, alarmaMin);
    display.display();
    delay(1000);
  }
  else if (sel) { // cambiar dígito seleccionado
    indiceSeleccionado = (indiceSeleccionado + 1) % 4;
    delay(250);
  }
  else if (chg) { // cambiar valor del dígito
    cambiarDigito(indiceSeleccionado);
    delay(250);
  }
  // Mostrar reloj actual + hora de alarma + editor
  display.clearDisplay();
  display.setTextSize(2);
  display.setCursor(10,0);
  display.printf("%02d:%02d:%02d", now.hour(), now.minute(), now.second());

  display.setTextSize(1);
  display.setCursor(0,50);
  display.print("Alarma: ");
  if (alarmaHora >= 0)
    display.printf("%02d:%02d", alarmaHora, alarmaMin);
  else
    display.print("--:--");

  // Dibujar hora editable
  dibujarHora(indiceSeleccionado);

  display.display();
  delay(200);  
}
void alarmaactiva() {
  if (alarmaSonando) {
    display.clearDisplay();
    display.setTextSize(2);
    display.setCursor(15, 20);
    display.println("ALARMA!!!");
    display.display();
    tone(BUZZER_PIN, 1000, 200);  // 1000 Hz por 200 ms
    delay(250);
    tone(BUZZER_PIN, 1500, 200);  // 1500 Hz por 200 ms
    delay(250);
    tone(BUZZER_PIN, 1200, 200);  // 1200 Hz por 200 ms
    delay(250);

    if (digitalRead(UPBUTTON) == LOW || digitalRead(DOWNBUTTON) == LOW) {
      noTone(BUZZER_PIN);
      alarmaSonando = false;
      alarmaActiva = false;
      delay(500);
    }
    return;
  }
}
///////////////////////////////// SETUP //////////////////////////////////////
void setup() {
  pinMode(MIDBUTTON, INPUT_PULLUP);
  pinMode(UPBUTTON, INPUT_PULLUP);
  pinMode(DOWNBUTTON, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(MIDBUTTON), mediopresionadoo, FALLING);
  Wire.begin(SDA_PIN, SCL_PIN);
 
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    while (true);
  }
  if (!rtc.begin()) {
    display.clearDisplay();
    display.setCursor(0,0);
    display.println("Error RTC!");
    display.display();
    while (1);
  }
  if (rtc.lostPower()) {
    rtc.adjust(DateTime(F(__DATE__), F(__TIME__)));
  }
  display.clearDisplay();
  display.display();

  randomSeed(analogRead(A0));
  resetMatch();

for (int i = 0; i < MAX_FISH; i++) {
  fishes[i] = { 
    random(20, SCREEN_WIDTH - 20),   // x
    random(20, SCREEN_HEIGHT - 20),  // y
    3,                               // size
    random(2, 3),                    // speed
    random(0, 2),                    // direction (0/1)
    0,                               // eaten
    -1                               // targetFood  <-- NUEVO
  };
}

  for (int i = 0; i < MAX_FOOD; i++) {
    foods[i].active = false;
  }

  for (int i = 0; i < MAX_BUBBLES; i++) {
    bubbles[i] = {random(5, SCREEN_WIDTH - 5), random(10, SCREEN_HEIGHT), random(1, 2)};
  }
  EEPROM.begin(10);
  // Recuperar alarma guardada
  alarmaHora = EEPROM.read(EEPROM_ADDR);
  alarmaMin  = EEPROM.read(EEPROM_ADDR+1);
  if (alarmaHora >= 0 && alarmaHora < 24 && alarmaMin >= 0 && alarmaMin < 60) {
    digitoH1 = alarmaHora / 10;
    digitoH2 = alarmaHora % 10;
    digitoM1 = alarmaMin / 10;
    digitoM2 = alarmaMin % 10;
  } else {
    alarmaHora = -1;
    alarmaMin = -1;
  }

selectedIndex = 3;
menu = 0;
}
////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////// LOOP //////////////////////////////////////
void loop(){
  DateTime now = rtc.now();
/////////////////////// chequeo de alarma ////////////////////////////
  if (alarmaHora == now.hour() && alarmaMin == now.minute() && now.second() == 0) {
    alarmaActiva = true;
    alarmaSonando = true;
    menu = 0;
  }
//////////////////
  String item = getSelectedItem();
  if (mediopresionado){
    mediopresionado = false;
   menu++;
   if (menu>1){
    String item = getSelectedItem();
     menu = 0;
  }
  }
  display.clearDisplay();
  if (menu == 1){
    menuprincipal();
  if (digitalRead(DOWNBUTTON) == LOW){
    prevItem();
  }
  if (digitalRead(UPBUTTON) == LOW){
    nextItem();
  }
  }
  if ((menu == 0)&&(item == "pecera")&&(alarmaSonando==false)){ // SI MENU NO ESTÁ SELECCIONADO Y ESTÁ SELECCIONADO PECERA
  // Doble borde
  drawDoubleBorder();

  // Plantas variadas
  drawPlants();

  // Burbujas
  for (int i = 0; i < MAX_BUBBLES; i++) {
    drawBubble(bubbles[i]);
    bubbles[i].y -= bubbles[i].speed;
    if (bubbles[i].y < 5) {
      bubbles[i].y = SCREEN_HEIGHT - 1;
      bubbles[i].x = random(5, SCREEN_WIDTH - 5);
    }
  }

  // Alimentos
  for (int i = 0; i < MAX_FOOD; i++) {
    if (foods[i].active) {
      foods[i].y += 1;
      if (foods[i].y >= SCREEN_HEIGHT - 1) foods[i].active = false;
      drawFood(foods[i]);
    }
  }

  // Peces
// Peces
for (int i = 0; i < MAX_FISH; i++) {
  Fish &f = fishes[i];

  // ----------- ASIGNACIÓN / RE-ASIGNACIÓN DE COMIDA EXCLUSIVA -----------
  if (f.targetFood < 0 || !foods[f.targetFood].active) {
    f.targetFood = -1;
    for (int j = 0; j < MAX_FOOD; j++) {
      if (!foods[j].active) continue;

      // ¿ya la persigue otro pez?
      bool taken = false;
      for (int k = 0; k < MAX_FISH; k++) {
        if (k != i && fishes[k].targetFood == j) { taken = true; break; }
      }
      if (!taken) { f.targetFood = j; break; }
    }
  }

  // ----------- MOVERSE Y COMER COMIDA -----------
  if (f.targetFood >= 0 && foods[f.targetFood].active) {
    int j = f.targetFood;
    int dx = foods[j].x - f.x;
    int dy = foods[j].y - f.y;

    if (abs(dx) < 3 && abs(dy) < 3) {
      // Comer
      foods[j].active = false;
      f.eaten++;
      if (f.eaten >= 3) { f.size++; f.eaten = 0; }
      f.targetFood = -1; // libera objetivo
    } else {
      f.direction = dx > 0;
      f.x += (dx > 0 ? 1 : -1) * f.speed;
      f.y += (dy > 0 ? 1 : -1) * (f.speed / 2);
    }
  }

  // ----------- DEPREDACIÓN ENTRE PECES (f grande se come a otro) -----------
  for (int j = 0; j < MAX_FISH; j++) {
    if (i == j) continue;
    Fish &other = fishes[j];

    if (f.size > other.size + 2 &&
        abs(f.x - other.x) < 5 &&
        abs(f.y - other.y) < 5) {
      // f se come a other
      f.size++;
      other.x = random(10, SCREEN_WIDTH - 10);
      other.y = random(10, SCREEN_HEIGHT - 10);
      other.size = 2;
      other.eaten = 0;
      other.targetFood = -1;
    }
  }

  // ----------- AJUSTES Y MOVIMIENTO BASAL (sólo si no tiene comida asignada) -----------
  if (f.size > 8) f.size = 8;

  if (f.targetFood < 0) { // “nado libre” si no tiene objetivo
    if (random(100) < 5)  f.direction = !f.direction;
    if (random(100) < 10) f.y += random(-1, 2);

    if (f.direction) f.x += f.speed;
    else             f.x -= f.speed;
  }

  // Límites
  if (f.x < 5) { f.direction = true;  f.x = 5; }
  if (f.x > SCREEN_WIDTH - 5) { f.direction = false; f.x = SCREEN_WIDTH - 5; }
  if (f.y < 10) f.y = 10;
  if (f.y > SCREEN_HEIGHT - 10) f.y = SCREEN_HEIGHT - 10;

  // Dibujo
  drawFish(f);
} // <-- asegurate de que ESTA llave cierre el bucle de peces

  

  // Alimentar
  if (digitalRead(UPBUTTON) == LOW) {
    for (int i = 0; i < MAX_FOOD; i++) {
      if (!foods[i].active) {
        foods[i].x = random(10, SCREEN_WIDTH - 10);
        foods[i].y = 5;
        foods[i].active = true;
        assignFoodTargets();
        delay(200);
        break; // una por pulsación
      }
    }
  }

  display.display();
  delay(80);
  }
  else if ((menu==0)&&(item== "pong" )&&(alarmaSonando==false)){
    // ACA HAY QUE PONER EL PONG
    pong();
  }
  else if ((menu==0)&&(item== "GIF" )&&(alarmaSonando==false)){
    // ACA HAY QUE PROGRAMAR EL GIF
    GIF();
  }
  else if ((menu==0)&&(item=="reloj")&&(alarmaSonando==false)){
  reloj();
  }
  else if ((menu==0)&&(item=="alarma")&&(alarmaSonando==false)){
  alarma();
  }
  else if ((menu==0)&&(alarmaSonando==true)){
  alarmaactiva();
  }
}

//////////////////////////////////////////////////////////////////////////////////////////
